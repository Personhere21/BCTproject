import hashlib  # for creating SHA-256 hash
import time     # for timestamping blocks
import os       # to read files from folder

# Block Class 
class Block:
    def __init__(self, data, prev_hash):
        self.timestamp = time.time()              # current time in seconds
        self.data = data                          # data (malware hash)
        self.prev_hash = prev_hash                # hash of previous block
        self.hash = self.calculate_hash()         # generate this block's hash

    def calculate_hash(self):
        content = str(self.timestamp) + self.data + self.prev_hash
        return hashlib.sha256(content.encode()).hexdigest()

# Blockchain Class
class Blockchain:
    def __init__(self):
        self.chain = [self.create_genesis_block()]  # chain starts with genesis block

    def create_genesis_block(self):
        return Block("Genesis Block", "0")  # first block with no prev_hash

    def add_block(self, data):
        prev_block = self.chain[-1]
        new_block = Block(data, prev_block.hash)
        self.chain.append(new_block)

    def is_malicious(self, file_hash):
        for block in self.chain:
            if block.data == file_hash:
                return True
        return False

    def delete_block(self, file_hash):
        for i, block in enumerate(self.chain):
            if block.data == file_hash:
                self.chain.pop(i)
                print(f"Malware hash {file_hash[:10]}... removed from blockchain.")
                return True
        print(f"Malware hash {file_hash[:10]}... not found in blockchain.")
        return False

# File Hashing
def hash_file(file_path):
    with open(file_path, 'rb') as f:
        file_data = f.read()
        return hashlib.sha256(file_data).hexdigest()

# Main Execution
if __name__ == "__main__":
    malware_chain = Blockchain()
    folder = "files_to_test"

    while True:
        print("\nMalware Detection System")
        print("1. Add malware file")
        print("2. Delete malware file")
        print("3. Check files")
        print("4. Exit")
        choice = input("Enter choice (1-4): ")

        if choice == "1":
            file_path = input("Enter path to malware file: ")
            if os.path.exists(file_path):
                malware_hash = hash_file(file_path)
                malware_chain.add_block(malware_hash)
                print(f"Malware hash {malware_hash[:10]}... added to blockchain.")
            else:
                print("File not found!")

        elif choice == "2":
            file_path = input("Enter path to malware file to delete: ")
            if os.path.exists(file_path):
                malware_hash = hash_file(file_path)
                malware_chain.delete_block(malware_hash)
            else:
                print("File not found!")

        elif choice == "3":
            if not os.path.exists(folder):
                print(f"Folder {folder} does not exist!")
                continue
            print("\nScanning files...")
            for filename in os.listdir(folder):
                filepath = os.path.join(folder, filename)
                file_hash = hash_file(filepath)
                if malware_chain.is_malicious(file_hash):
                    print(f"! {filename}: MALWARE DETECTED!")
                else:
                    print(f"  {filename}: Clean.")

        elif choice == "4":
            print("Exiting...")
            break

        else:
            print("Invalid choice! Please enter 1-4.")
