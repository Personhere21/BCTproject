import hashlib  # for creating SHA-256 hash
import time     # for timestamping blocks
import os       # to read files from folder

# Block Class 
class Block:
    def __init__(self, data, prev_hash):
        self.timestamp = time.time()              # current time in seconds
        self.data = data                          # data (malware hash)
        self.prev_hash = prev_hash                # hash of previous block
        self.hash = self.calculate_hash()         # generate this block's hash

    def calculate_hash(self):
        content = str(self.timestamp) + self.data + self.prev_hash
        return hashlib.sha256(content.encode()).hexdigest()

# Blockchain Class
class Blockchain:
    def __init__(self):
        self.chain = [self.create_genesis_block()]  # chain starts with genesis block

    def create_genesis_block(self):
        return Block("Genesis Block", "0")  # first block with no prev_hash

    def add_block(self, data):
        prev_block = self.chain[-1]
        new_block = Block(data, prev_block.hash)
        self.chain.append(new_block)

    def is_malicious(self, file_hash):
        for block in self.chain:
            if block.data == file_hash:
                return True
        return False

# File Hashing
def hash_file(file_path):
    with open(file_path, 'rb') as f:
        file_data = f.read()
        return hashlib.sha256(file_data).hexdigest()

# Main Execution
if __name__ == "__main__":
    malware_chain = Blockchain()

    # Step 1: Add known malware hashes
    malware1_hash = hash_file("files_to_test/malware1.txt")
    malware2_hash = hash_file("files_to_test/malware2.txt")
    malware_chain.add_block(malware1_hash)
    malware_chain.add_block(malware2_hash)

    print(" Malware database created.\n")

    # Step 2: Scan all files
    folder = "files_to_test"
    for filename in os.listdir(folder):
        filepath = os.path.join(folder, filename)
        file_hash = hash_file(filepath)

        if malware_chain.is_malicious(file_hash):
            print(f" ! {filename}: MALWARE DETECTED!")
        else:
            print(f"  {filename}: Clean.")
